name: Security Analysis & Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # Configuración especial para obtener referencias en push
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0  # Necesario para análisis completo

      - name: Run Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          # Manejo dinámico de referencias para ambos casos
          base-ref: ${{ github.event.pull_request.base.sha || github.sha }}
          head-ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fail-on-severity: high

  analyze:
    name: Analyze TypeScript with CodeQL
    needs: dependency-review
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Node.js and dependencies
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'javascript'

    - name: Build project
      run: npm run build --if-present

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: '/language:typescript'

  deploy:
    needs: analyze
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/deploy_key
        
    - name: Deploy
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
        cd /var/www/QuillTrack &&
        git pull origin main &&
        npm install &&
        npm run build &&
        pm2 restart QuillTrack
        '